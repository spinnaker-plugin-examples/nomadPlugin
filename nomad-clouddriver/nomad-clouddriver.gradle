buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
  }
}
apply plugin: "io.spinnaker.plugin.service-extension"
apply plugin: "maven-publish"
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-spring'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
  mavenCentral()
  maven {
    url 'https://armory.jfrog.io/armory/gradle-dev-local/'
    credentials {
      username = "${artifactory_user}"
      password = "${artifactory_password}"
    }
  }
  maven {
    url 'https://armory.jfrog.io/armory/jcenter-cache/'
    credentials {
      username = "${artifactory_user}"
      password = "${artifactory_password}"
    }
  }
}

spinnakerPlugin {
  serviceName = "clouddriver"
  pluginClass = "io.armory.plugin.nomad.NomadPlugin"
}

dependencies {
  compileOnly "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

  implementation (group: 'com.hashicorp.nomad', name: 'nomad-sdk', version: '0.11.3.0') {
    exclude (group: 'com.fasterxml.jackson.core')
  }
  compileOnly (group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: "2.11.1")

  compileOnly (group: 'org.springframework', name: 'spring-context', version: '5.2.1.RELEASE')
  compileOnly (group: 'org.springframework', name: 'spring-web', version: '5.2.2.RELEASE')
  compileOnly (group: 'org.springframework.boot', name: 'spring-boot', version: '2.2.4.RELEASE')

  compileOnly (group: 'io.spinnaker.kork', name: 'kork-api', version: "${korkVersion}")
  compileOnly (group: 'io.spinnaker.kork', name: 'kork-plugins', version: "${korkVersion}")
  compileOnly (group: 'io.spinnaker.kork', name: 'kork-plugins-spring-api', version: "${korkVersion}")
  compileOnly (group: 'io.spinnaker.kork', name: 'kork-credentials-api', version: "${korkVersion}")
  compileOnly (group: 'io.spinnaker.clouddriver', name: 'clouddriver-api', version: "${clouddriverVersion}")
  compileOnly (group: 'io.spinnaker.clouddriver', name: 'clouddriver-core', version: "${clouddriverVersion}") {
    exclude (group: 'org.codehaus.groovy')
  }

  compileOnly (group: 'com.netflix.spectator', name: 'spectator-api', version: "0.103.0")
  compileOnly (group: 'com.netflix.spinnaker.moniker', name: 'moniker', version: "0.2.0")

  compileOnly (group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: "2.11.1")

  testImplementation (group: 'io.spinnaker.kork', name: 'kork-plugins-api', version: "${korkVersion}")
  testImplementation (group: 'io.spinnaker.kork', name: 'kork-credentials-api', version: "${korkVersion}")
  testImplementation (group: 'io.spinnaker.clouddriver', name: 'clouddriver-api', version: "${clouddriverVersion}")
  testImplementation (group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: "2.11.1")

  testImplementation "org.junit.jupiter:junit-jupiter-api:5.5.2"
  testImplementation group: 'io.strikt', name: 'strikt-core', version: '0.31.0'
  testImplementation group: 'dev.minutest', name: 'minutest', version: '1.13.0'
  testImplementation group: 'io.mockk', name: 'mockk', version: '1.9.3'

  testRuntime "org.junit.jupiter:junit-jupiter-engine:5.4.0"
  testRuntime "org.junit.platform:junit-platform-launcher:1.4.0"
  testRuntime "org.junit.platform:junit-platform-commons:1.5.2"
}

tasks.withType(Test) {
  useJUnitPlatform()
}
